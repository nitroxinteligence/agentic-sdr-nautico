# Dockerfile.prod.v3 - Corrigido para Supabase e Redis
FROM python:3.11-slim AS builder

# Install system build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements
COPY requirements.txt .

# Install Python dependencies with retry and timeout protection
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --timeout 600 --retries 3 --user -r requirements.txt

# Runtime stage
FROM python:3.11-slim

# Create non-root user
RUN groupadd -r marina && useradd -r -g marina marina

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    tesseract-ocr \
    tesseract-ocr-por \
    ffmpeg \
    poppler-utils \
    libmagic1 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy Python packages from builder
COPY --from=builder --chown=marina:marina /root/.local /home/marina/.local

# Set environment variables
ENV PATH=/home/marina/.local/bin:$PATH \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    ENVIRONMENT=production \
    PORT=8000 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Set working directory
WORKDIR /app

# Copy application code
COPY --chown=marina:marina . .

# Download NLTK data with fallback
RUN python -c "try: import nltk; nltk.download('punkt', quiet=True)\nexcept: pass" || true

# Clean and compile
RUN find . -name "*.pyc" -delete && \
    find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true && \
    python -c "import compileall; compileall.compile_dir('/app', quiet=True)" || true

# Create directories with proper permissions
RUN mkdir -p /app/logs /app/uploads /app/temp && \
    chown -R marina:marina /app

# Switch to non-root user
USER marina

# Optimized health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Production optimized command with single worker for debugging
CMD ["uvicorn", "main:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--workers", "1", \
     "--timeout-keep-alive", "5", \
     "--access-log"]